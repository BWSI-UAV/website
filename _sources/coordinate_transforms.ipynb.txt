{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  Coordinate Frames\n",
    "\n",
    "The purpose of this practical is to understand the various reference frames used to orient and control the UAV and practice transforming information between these frames. The major takeaways are:\n",
    " \n",
    " - The most common reference frames we will use are the North-East-Down (NED), East-North-Up (ENU), Body, Camera, and sometimes ARTag Marker frames.\n",
    " - The same vector can be expressed in difference reference frames\n",
    " - There are multiple ways in which we can express the difference between two reference frames including euler angles (yaw, pitch, roll), rotation matrices, and quaternions\n",
    " - The `tf` and `tf_static` ROS topics are a useful way of communicating reference frame information on the Aero Compute Board, but we won't make immediate use of it, yet.\n",
    " - The `/mavros/local_position/pose` and `/mavros/local_position/velocity` topics provide the estimated pose and velocity of the UAV's body frame with respect to the world frame (i.e. NED or ENU)\n",
    " \n",
    "## Coordinate Frame Practice\n",
    "\n",
    "We've pushed a jupyter notebook exercise to the `laboratory` repository that will help us start practicing/learning these concepts and conventions. \n",
    "\n",
    "At this point you should be able to `git pull upstream master` in your `laboratory` repo and then navigate to `laboratory/kinematics_dynamics/coordinate_transforms.ipynb`. Open this notebook and work through the questions (we'll try to do this together during class)\n",
    "\n",
    "## Further Reading\n",
    "\n",
    "- PX4 Documentation: https://dev.px4.io/en/ros/external_position_estimation.html\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
